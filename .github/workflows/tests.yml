# Workflow to validate OMT`s new Pull Requests and commits pushed into OMT repo

name: OpenMapTiles CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:

  integrity_test:
    name: Run quick integrity test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the changes
        uses: actions/checkout@v2

      - name: Run quickstart for a small area
        env:
          area: andorra
        run: |
          # For now, change the quickstart values directly in the .env file
          # TODO: We should probably use env vars instead
          sed -i 's/QUICKSTART_MAX_ZOOM=7/QUICKSTART_MAX_ZOOM=14/g' .env
          ./quickstart.sh $area

      - name: Save quickstart.log
        uses: actions/upload-artifact@v1
        with:
          name: quickstart.log
          path: quickstart.log

      - name: Test etldoc images
        run: TEST_MODE=yes make generate-devdoc

  base_performance:
    name: Evaluate base performance
    runs-on: ubuntu-latest
    # Even though we technically don't need to wait for integrity test,
    # there is no point to run long perf test until we know the code is OK
    needs: integrity_test
    steps:
      - name: Get base branch (on PULL REQUEST)
        uses: actions/checkout@v2
        # Pull request evaluates the base performance before evaluating the proposed changes
        if: "github.event_name == 'pull_request'"
        with:
          ref: "${{ github.base_ref }}"
      - name: Get commit branch (on PUSH)
        uses: actions/checkout@v2
        # For commits, just get the resulting code
        if: "github.event_name != 'pull_request'"
      - name: Cache download area
        uses: actions/cache@v1
        with:
          path: data/perf-test-areas-latest.osm.pbf
          key: test-data
      - name: Load test data into DB and run performance test
        id: load_db
        run: |
          # Make sure these steps are identical to the other job
          make clean db-destroy
          make all
          # Download test file from Google Drive if it is not already there (from Cache)
          if [ ! -f data/perf-test-areas-latest.osm.pbf ]; then
            echo "Data file does not exist, downloading..."
            curl --silent --show-error --location --output data/perf-test-areas-latest.osm.pbf \
              "https://drive.google.com/uc?export=download&id=12vw07f9W0MiAHIqMztRiIMwahJfqTi21"
          fi
          make db-start
          time make import-data
          time make import-osm
          time make import-borders
          time make import-wikidata
          time make import-sql

          # This step is the only one that differs between first and second run
          # Use latest tools version because these specific tests do not yet exist in the 4.1 tools version
          export TOOLS_VERSION=latest
          docker-compose run --rm openmaptiles-tools test-perf openmaptiles.yaml \
            --minzoom 0 --maxzoom 14 \
            --test equatorial-guinea --test liechtenstein \
            --record base-performance.json
      - name: Save test result
        uses: actions/upload-artifact@v1
        with:
          name: base-performance.json
          path: base-performance.json

  pr_performance:
    name: Evaluate PR performance
    if: "github.event_name == 'pull_request'"
    needs: base_performance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pull request code
        uses: actions/checkout@v2
      - name: Download base performance results
        uses: actions/download-artifact@v1
        with:
          name: base-performance.json
      - name: Cache download area
        uses: actions/cache@v1
        with:
          path: data/perf-test-areas-latest.osm.pbf
          key: test-data
      - name: Load test data into DB and run performance test
        id: load_db
        run: |
          # Make sure these steps are identical to the other job
          make clean db-destroy
          make all
          # Download test file from Google Drive if it is not already there (from Cache)
          if [ ! -f data/perf-test-areas-latest.osm.pbf ]; then
            echo "Data file does not exist, downloading..."
            curl --silent --show-error --location --output data/perf-test-areas-latest.osm.pbf \
              "https://drive.google.com/uc?export=download&id=12vw07f9W0MiAHIqMztRiIMwahJfqTi21"
          fi
          make db-start
          time make import-data
          time make import-osm
          time make import-borders
          time make import-wikidata
          time make import-sql

          # This step is the only one that differs between first and second run
          # A single file artifact is downloaded as a dir with the same name
          mv base-performance.json/base-performance.json base-perf.json
          rm -rf base-performance.json
          mv base-perf.json base-performance.json
          # Use latest tools version because these specific tests do not yet exist in the 4.1 tools version
          export TOOLS_VERSION=latest
          OUTPUT="$(docker-compose run --rm openmaptiles-tools test-perf openmaptiles.yaml \
            --minzoom 0 --maxzoom 14 \
            --test equatorial-guinea --test liechtenstein \
            --compare base-performance.json --record pr-performance.json)"

          # Convert multiline output into a single long string.
          # See https://github.community/t5/GitHub-Actions/set-output-Truncates-Multiline-Strings/td-p/37870
          OUTPUT="${OUTPUT//'%'/'%25'}"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"

          # Split into two parts -- before and after the ===== SUMMARY =====
          echo "::set-output name=summary::${OUTPUT##*========}"
          echo "::set-output name=details::${OUTPUT%%========*}"
      - name: Save test result
        uses: actions/upload-artifact@v1
        with:
          name: pr-performance.json
          path: pr-performance.json
      - name: Comment on Pull Request
        uses: marocchino/sticky-pull-request-comment@v1
        timeout-minutes: 1
        continue-on-error: true
        with:
          message: |-
            ```
            ${{ steps.load_db.outputs.summary }}
            ```

            <details>
            <summary>expand for details...</summary>

            ```
            ${{ steps.load_db.outputs.details }}
            ```

            </details>
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
